/*------------------------------------*\
    This file has been modified by me, Helen Tran, to suit my needs. The biggest and most important change being the adjustment of Harry Roberts' inline-block technique to use floats instead.
    Probably best to grab the real thing: http://csswizardry.com/csswizardry-grids/
\*------------------------------------*/




/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/
/**
 * CONTENTS
 * INTRODUCTION.........How the grid system works.
 * VARIABLES............Your settings.
 * MIXINS...............Library mixins.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 * PUSH.................Push classes.
 * PULL.................Pull classes.
 */





/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to ‘false’:
 */
$responsive:            true!default;


/**
 * Is this build mobile first? Setting to ‘true’ means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */
$mobile-first:          true!default;


/**
 * Set the spacing between your grid items.
 */
$gutter:                30px!default;


/**
 * Would you like Sass’ silent classes, or regular CSS classes?
 */
$use-silent-classes:    false!default;


/**
 * Would you like push and pull classes enabled?
 */
$push:                  true!default;
$pull:                  true!default;


/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */
$use-markup-fix:        true!default;


/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */
$breakpoints: (
    'one' '(min-width: 600px)',
    'two' '(min-width: 800px)',
    'three' '(min-width: 1130px)'
)!default;


/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
 * have been set to ‘true’.
 */
$breakpoint-has-widths: ('one', 'two', 'three')!default;
$breakpoint-has-push:   ('one', 'two', 'three')!default;
$breakpoint-has-pull:   ('one', 'two', 'three')!default;


/**
 * You do not need to edit anything from this line onward; csswizardry-grids is
 * good to go. Happy griddin’!
 */
$class-type:            unquote(".");

@if $use-silent-classes == true{
    $class-type:        unquote("%");
}





/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 *
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
@mixin grid-media-query($media-query){
    $breakpoint-found: false;

    @each $breakpoint in $breakpoints{
        $name: nth($breakpoint, 1);
        $declaration: nth($breakpoint, 2);

        @if $media-query == $name and $declaration{
            $breakpoint-found: true;

            @media only screen and #{$declaration}{
                @content;
            }
        }
    }

    @if $breakpoint-found == false{
        @warn "Breakpoint ‘#{$media-query}’ does not exist"
    }
}


/**
 * Drop relative positioning into silent classes which can’t take advantage of
 * the `[class*="push--"]` and `[class*="pull--"]` selectors.
 */
@mixin silent-relative(){
    @if $use-silent-classes == true{
        position:relative;
    }
}





/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/
/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */
#{$class-type}grid{
    list-style:none;                /* [1] */
    margin:0;                       /* [2] */
    padding:0;                      /* [2] */
    margin-left:-$gutter;           /* [3] */
    @if $use-markup-fix != true{
        letter-spacing:-0.31em;
    }
    @include clearfix;
}

@if $use-markup-fix != true{
    /* Opera hack */
    .opera:-o-prefocus,
    #{$class-type}grid{
        word-spacing:-0.43em;
    }
}


    /**
     * 1. Cause columns to stack side-by-side.
     * 2. Space columns apart.
     * 3. Align columns to the tops of each other.
     * 4. Full-width unless told to behave otherwise.
     * 5. Required to combine fluid widths and fixed gutters.
     */
    #{$class-type}grid__item{
        display: block;
        float: left;
        padding-left:$gutter;           /* [2] */
        vertical-align:top;             /* [3] */
        @if $mobile-first == true{
            width:100%;                 /* [4] */
        }
        -webkit-box-sizing:border-box;  /* [5] */
           -moz-box-sizing:border-box;  /* [5] */
                box-sizing:border-box;  /* [5] */
        @if $use-markup-fix != true{
            letter-spacing:normal;
            word-spacing:normal;
        }
    }


/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */
#{$class-type}grid--rev{
    direction:rtl;
    text-align:left;

    > #{$class-type}grid__item{
        direction:ltr;
        text-align:left;
    }

    @include clearfix;
}


/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */
#{$class-type}grid--full{
    margin-left:0;

    > #{$class-type}grid__item{
        padding-left:0;
    }

    @include clearfix;
}



/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Create our width classes, prefixed by the specified namespace.
 */
@mixin device-type($namespace:""){


    /**
     * Whole
     */
    #{$class-type}#{$namespace}one-whole         { width:100%; }


    /**
     * Halves
     */
    #{$class-type}#{$namespace}one-half          { width:50%; }


    /**
     * Thirds
     */
    #{$class-type}#{$namespace}one-third         { width:33.333%; }
    #{$class-type}#{$namespace}two-thirds        { width:66.666%; }


    /**
     * Quarters
     */
    #{$class-type}#{$namespace}one-quarter       { width:25%; }
    #{$class-type}#{$namespace}two-quarters      { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}three-quarters    { width:75%; }


    /**
     * Fifths
     */
    #{$class-type}#{$namespace}one-fifth         { width:20%; }
    #{$class-type}#{$namespace}two-fifths        { width:40%; }
    #{$class-type}#{$namespace}three-fifths      { width:60%; }
    #{$class-type}#{$namespace}four-fifths       { width:80%; }


    /**
     * Sixths
     */
    #{$class-type}#{$namespace}one-sixth         { width:16.666%; }
    #{$class-type}#{$namespace}two-sixths        { @extend #{$class-type}#{$namespace}one-third; }
    #{$class-type}#{$namespace}three-sixths      { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}four-sixths       { @extend #{$class-type}#{$namespace}two-thirds; }
    #{$class-type}#{$namespace}five-sixths       { width:83.333%; }


    /**
     * Eighths
     */
    #{$class-type}#{$namespace}one-eighth        { width:12.5%; }
    #{$class-type}#{$namespace}two-eighths       { @extend #{$class-type}#{$namespace}one-quarter; }
    #{$class-type}#{$namespace}three-eighths     { width:37.5%; }
    #{$class-type}#{$namespace}four-eighths      { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}five-eighths      { width:62.5%; }
    #{$class-type}#{$namespace}six-eighths       { @extend #{$class-type}#{$namespace}three-quarters; }
    #{$class-type}#{$namespace}seven-eighths     { width:87.5%; }


    /**
     * Tenths
     */
    #{$class-type}#{$namespace}one-tenth         { width:10%; }
    #{$class-type}#{$namespace}two-tenths        { @extend #{$class-type}#{$namespace}one-fifth; }
    #{$class-type}#{$namespace}three-tenths      { width:30%; }
    #{$class-type}#{$namespace}four-tenths       { @extend #{$class-type}#{$namespace}two-fifths; }
    #{$class-type}#{$namespace}five-tenths       { @extend #{$class-type}#{$namespace}one-half; }
    #{$class-type}#{$namespace}six-tenths        { @extend #{$class-type}#{$namespace}three-fifths; }
    #{$class-type}#{$namespace}seven-tenths      { width:70%; }
    #{$class-type}#{$namespace}eight-tenths      { @extend #{$class-type}#{$namespace}four-fifths; }
    #{$class-type}#{$namespace}nine-tenths       { width:90%; }


    /**
     * Elevenths
     */
    #{$class-type}#{$namespace}one-eleventh       { width:9.090%; }
    #{$class-type}#{$namespace}two-elevenths      { width:18.181%; }
    #{$class-type}#{$namespace}three-elevenths    { width:27.27%; }
    #{$class-type}#{$namespace}four-elevenths     { width:36.36%; }
    #{$class-type}#{$namespace}five-elevenths     { width:45.45% }
    #{$class-type}#{$namespace}six-elevenths      { width:54.54%; }
    #{$class-type}#{$namespace}seven-elevenths    { width:63.63%; }
    #{$class-type}#{$namespace}eight-elevenths    { width:72.72%; }
    #{$class-type}#{$namespace}nine-elevenths     { width:81.81%; }
    #{$class-type}#{$namespace}ten-elevenths      { width:90.9%; }

}


/**
 * Our regular, non-responsive width classes.
 */
@include device-type();


/**
 * Our responsive classes, if we have enabled them.
 */
@if $responsive == true{

    @each $name in $breakpoint-has-widths {
        @include grid-media-query($name) {
           @include device-type('#{$name}--');
        }
    }


}





/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
@mixin push-setup($namespace: ""){

    /**
     * Whole
     */
    #{$class-type}push--#{$namespace}one-whole           { margin-left:100%; @include silent-relative(); }


    /**
     * Halves
     */
    #{$class-type}push--#{$namespace}one-half            { margin-left:50%; @include silent-relative(); }


    /**
     * Thirds
     */
    #{$class-type}push--#{$namespace}one-third           { margin-left:33.333%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-thirds          { margin-left:66.666%; @include silent-relative(); }


    /**
     * Quarters
     */
    #{$class-type}push--#{$namespace}one-quarter         { margin-left:25%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-quarters        { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}three-quarters      { margin-left:75%; @include silent-relative(); }


    /**
     * Fifths
     */
    #{$class-type}push--#{$namespace}one-fifth           { margin-left:20%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-fifths          { margin-left:40%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}three-fifths        { margin-left:60%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}four-fifths         { margin-left:80%; @include silent-relative(); }


    /**
     * Sixths
     */
    #{$class-type}push--#{$namespace}one-sixth           { margin-left:16.666%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-sixths          { @extend #{$class-type}push--#{$namespace}one-third; }
    #{$class-type}push--#{$namespace}three-sixths        { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}four-sixths         { @extend #{$class-type}push--#{$namespace}two-thirds; }
    #{$class-type}push--#{$namespace}five-sixths         { margin-left:83.333%; @include silent-relative(); }


    /**
     * Eighths
     */
    #{$class-type}push--#{$namespace}one-eighth          { margin-left:12.5%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-eighths         { @extend #{$class-type}push--#{$namespace}one-quarter; }
    #{$class-type}push--#{$namespace}three-eighths       { margin-left:37.5%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}four-eighths        { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}five-eighths        { margin-left:62.5%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}six-eighths         { @extend #{$class-type}push--#{$namespace}three-quarters; }
    #{$class-type}push--#{$namespace}seven-eighths       { margin-left:87.5%; @include silent-relative(); }


    /**
     * Tenths
     */
    #{$class-type}push--#{$namespace}one-tenth           { margin-left:10%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-tenths          { @extend #{$class-type}push--#{$namespace}one-fifth; }
    #{$class-type}push--#{$namespace}three-tenths        { margin-left:30%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}four-tenths         { @extend #{$class-type}push--#{$namespace}two-fifths; }
    #{$class-type}push--#{$namespace}five-tenths         { @extend #{$class-type}push--#{$namespace}one-half; }
    #{$class-type}push--#{$namespace}six-tenths          { @extend #{$class-type}push--#{$namespace}three-fifths; }
    #{$class-type}push--#{$namespace}seven-tenths        { margin-left:70%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}eight-tenths        { @extend #{$class-type}push--#{$namespace}four-fifths; }
    #{$class-type}push--#{$namespace}nine-tenths         { margin-left:90%; @include silent-relative(); }

    /**
     * elevenths
     */
    #{$class-type}push--#{$namespace}one-eleventh       { margin-left:9.090%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}two-elevenths      { margin-left:18.181%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}three-elevenths    { margin-left:27.27%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}four-elevenths     { margin-left:36.36%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}five-elevenths     { margin-left:45.45%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}six-elevenths      { margin-left:54.54%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}seven-elevenths    { margin-left:63.63%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}eight-elevenths    { margin-left:72.72%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}nine-elevenths     { margin-left:81.81%; @include silent-relative(); }
    #{$class-type}push--#{$namespace}ten-elevenths      { margin-left:90.9%; @include silent-relative(); }
}

@if $push == true {

    @include push-setup();


    @if $responsive == true{
        @each $name in $breakpoint-has-push {
            @include grid-media-query($name) {
               @include  push-setup('#{$name}--');
            }
        }
    }


}





/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */
@mixin pull-setup($namespace: ""){

    /**
     * Whole
     */
    #{$class-type}pull--#{$namespace}one-whole           { margin-right:100%; @include silent-relative(); }


    /**
     * Halves
     */
    #{$class-type}pull--#{$namespace}one-half            { margin-right:50%; @include silent-relative(); }


    /**
     * Thirds
     */
    #{$class-type}pull--#{$namespace}one-third           { margin-right:33.333%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-thirds          { margin-right:66.666%; @include silent-relative(); }


    /**
     * Quarters
     */
    #{$class-type}pull--#{$namespace}one-quarter         { margin-right:25%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-quarters        { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}three-quarters      { margin-right:75%; @include silent-relative(); }


    /**
     * Fifths
     */
    #{$class-type}pull--#{$namespace}one-fifth           { margin-right:20%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-fifths          { margin-right:40%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}three-fifths        { margin-right:60%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}four-fifths         { margin-right:80%; @include silent-relative(); }


    /**
     * Sixths
     */
    #{$class-type}pull--#{$namespace}one-sixth           { margin-right:16.666%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-sixths          { @extend #{$class-type}pull--#{$namespace}one-third; }
    #{$class-type}pull--#{$namespace}three-sixths        { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}four-sixths         { @extend #{$class-type}pull--#{$namespace}two-thirds; }
    #{$class-type}pull--#{$namespace}five-sixths         { margin-right:83.333%; @include silent-relative(); }


    /**
     * Eighths
     */
    #{$class-type}pull--#{$namespace}one-eighth          { margin-right:12.5%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-eighths         { @extend #{$class-type}pull--#{$namespace}one-quarter; }
    #{$class-type}pull--#{$namespace}three-eighths       { margin-right:37.5%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}four-eighths        { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}five-eighths        { margin-right:62.5%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}six-eighths         { @extend #{$class-type}pull--#{$namespace}three-quarters; }
    #{$class-type}pull--#{$namespace}seven-eighths       { margin-right:87.5%; @include silent-relative(); }


    /**
     * Tenths
     */
    #{$class-type}pull--#{$namespace}one-tenth           { margin-right:10%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-tenths          { @extend #{$class-type}pull--#{$namespace}one-fifth; }
    #{$class-type}pull--#{$namespace}three-tenths        { margin-right:30%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}four-tenths         { @extend #{$class-type}pull--#{$namespace}two-fifths; }
    #{$class-type}pull--#{$namespace}five-tenths         { @extend #{$class-type}pull--#{$namespace}one-half; }
    #{$class-type}pull--#{$namespace}six-tenths          { @extend #{$class-type}pull--#{$namespace}three-fifths; }
    #{$class-type}pull--#{$namespace}seven-tenths        { margin-right:70%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}eight-tenths        { @extend #{$class-type}pull--#{$namespace}four-fifths; }
    #{$class-type}pull--#{$namespace}nine-tenths         { margin-right:90%; @include silent-relative(); }


    /**
     * elevenths
     */
    #{$class-type}pull--#{$namespace}one-eleventh       { margin-right:9.090%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}two-elevenths      { margin-right:18.181%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}three-elevenths    { margin-right:27.27%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}four-elevenths     { margin-right:36.36%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}five-elevenths     { margin-right:45.45%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}six-elevenths      { margin-right:54.54%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}seven-elevenths    { margin-right:63.63%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}eight-elevenths    { margin-right:72.72%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}nine-elevenths     { margin-right:81.81%; @include silent-relative(); }
    #{$class-type}pull--#{$namespace}ten-elevenths      { margin-right:90.9%; @include silent-relative(); }
}

@if $pull == true{

    @include pull-setup();


    @if $responsive == true{
        @each $name in $breakpoint-has-pull {
            @include grid-media-query($name) {
               @include  pull-setup('#{$name}--');
            }
        }
    }


}
